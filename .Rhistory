method = method)
df_result <- rbind(df_result, data.frame(
feature_a = feature_a,
feature_b = feature_b,
correlation = test$estimate,
p_value = test$p.value,
stringsAsFactors = FALSE
))
}
# pvalue adjustment
df_result$p_value <- p.adjust(df_result$p_value, method = adj.method)
return(df_result)
})
}
dri <- read.csv('e:/project/WMDS_driver_lncRNA/data/pancancer_driver/pan_dri_5.csv')$lnc
target_factor <- symbol_to_id(c("SOX2", 'POU5F1', 'MYC', 'KLF4'))
corr_rank(data_list = b,
a_list = dri,
b_list = target_factor,
save_path = NULL,
method = 'pearson',
adj.method = 'BH')
b[1:2]
corr_rank <- function(data_list, a_list, b_list, save_path, method = 'pearson', adj.method = 'BH') {
res <- lapply(data_list, function(x) {
# pre-process
tmp_data <- x
tmp_data[, 1] <- lapply(tmp_data[, 1], function(x) {
strsplit(x, '\\.')[[1]][1]
})
rownames(tmp_data) <- tmp_data[, 1]
tmp_data <- tmp_data[-1]
# # init result df
# df_result <- data.frame(
#   feature_a = character(),
#   feature_b = character(),
#   correlation = numeric(),
#   p_value = numeric(),
#   stringsAsFactors = FALSE
# )
#
# # for loop to calculation
# for (feature_a in a_list) {
#   for (feature_b in b_list) {
#     test <- stats::cor.test(tmp_data[[feature_a]],
#                             tmp_data[[feature_b]],
#                             method = method)
#     df_result <- rbind(df_result, data.frame(
#       feature_a = feature_a,
#       feature_b = feature_b,
#       correlation = test$estimate,
#       p_value = test$p.value,
#       stringsAsFactors = FALSE
#     ))
#   }
# }
#
# # pvalue adjustment
# df_result$p_value <- p.adjust(df_result$p_value, method = adj.method)
return(tmp_data)
})
}
dri <- read.csv('e:/project/WMDS_driver_lncRNA/data/pancancer_driver/pan_dri_5.csv')$lnc
target_factor <- symbol_to_id(c("SOX2", 'POU5F1', 'MYC', 'KLF4'))
corr_rank(data_list = b[1:2],
a_list = dri,
b_list = target_factor,
save_path = NULL,
method = 'pearson',
adj.method = 'BH')
corr_rank <- function(data_list, a_list, b_list, save_path, method = 'pearson', adj.method = 'BH') {
res <- lapply(data_list, function(x) {
# pre-process
tmp_data <- x
tmp_data[, 1] <- lapply(tmp_data[, 1], function(x) {
strsplit(x, '\\.')[[1]][1]
})
# rownames(tmp_data) <- tmp_data[, 1]
# tmp_data <- tmp_data[-1]
# # init result df
# df_result <- data.frame(
#   feature_a = character(),
#   feature_b = character(),
#   correlation = numeric(),
#   p_value = numeric(),
#   stringsAsFactors = FALSE
# )
#
# # for loop to calculation
# for (feature_a in a_list) {
#   for (feature_b in b_list) {
#     test <- stats::cor.test(tmp_data[[feature_a]],
#                             tmp_data[[feature_b]],
#                             method = method)
#     df_result <- rbind(df_result, data.frame(
#       feature_a = feature_a,
#       feature_b = feature_b,
#       correlation = test$estimate,
#       p_value = test$p.value,
#       stringsAsFactors = FALSE
#     ))
#   }
# }
#
# # pvalue adjustment
# df_result$p_value <- p.adjust(df_result$p_value, method = adj.method)
return(tmp_data)
})
}
gc()
dri <- read.csv('e:/project/WMDS_driver_lncRNA/data/pancancer_driver/pan_dri_5.csv')$lnc
target_factor <- symbol_to_id(c("SOX2", 'POU5F1', 'MYC', 'KLF4'))
corr_rank(data_list = b[1:2],
a_list = dri,
b_list = target_factor,
save_path = NULL,
method = 'pearson',
adj.method = 'BH')
gc()
dri <- read.csv('e:/project/WMDS_driver_lncRNA/data/pancancer_driver/pan_dri_5.csv')$lnc
target_factor <- symbol_to_id(c("SOX2", 'POU5F1', 'MYC', 'KLF4'))
res <- corr_rank(data_list = b[1:2],
a_list = dri,
b_list = target_factor,
save_path = NULL,
method = 'pearson',
adj.method = 'BH')
View(res)
View(res[["TCGA-BLCA"]])
gc()
dri <- read.csv('e:/project/WMDS_driver_lncRNA/data/pancancer_driver/pan_dri_5.csv')$lnc
target_factor <- symbol_to_id(c("SOX2", 'POU5F1', 'MYC', 'KLF4'))
res <- corr_rank(data_list = b[1:2],
a_list = dri,
b_list = target_factor,
save_path = NULL,
method = 'pearson',
adj.method = 'BH')
View(res)
View(corr_rank)
corr_rank <- function(data_list, a_list, b_list, save_path, method = 'pearson', adj.method = 'BH') {
res <- lapply(data_list, function(x) {
# pre-process
tmp_data <- x
tmp_data[, 1] <- unlist(lapply(tmp_data[, 1], function(x) {
strsplit(x, '\\.')[[1]][1]
}))
# rownames(tmp_data) <- tmp_data[, 1]
# tmp_data <- tmp_data[-1]
# # init result df
# df_result <- data.frame(
#   feature_a = character(),
#   feature_b = character(),
#   correlation = numeric(),
#   p_value = numeric(),
#   stringsAsFactors = FALSE
# )
#
# # for loop to calculation
# for (feature_a in a_list) {
#   for (feature_b in b_list) {
#     test <- stats::cor.test(tmp_data[[feature_a]],
#                             tmp_data[[feature_b]],
#                             method = method)
#     df_result <- rbind(df_result, data.frame(
#       feature_a = feature_a,
#       feature_b = feature_b,
#       correlation = test$estimate,
#       p_value = test$p.value,
#       stringsAsFactors = FALSE
#     ))
#   }
# }
#
# # pvalue adjustment
# df_result$p_value <- p.adjust(df_result$p_value, method = adj.method)
return(tmp_data)
})
}
gc()
dri <- read.csv('e:/project/WMDS_driver_lncRNA/data/pancancer_driver/pan_dri_5.csv')$lnc
target_factor <- symbol_to_id(c("SOX2", 'POU5F1', 'MYC', 'KLF4'))
res <- corr_rank(data_list = b[1:2],
a_list = dri,
b_list = target_factor,
save_path = NULL,
method = 'pearson',
adj.method = 'BH')
dri <- read.csv('e:/project/WMDS_driver_lncRNA/data/pancancer_driver/pan_dri_5.csv')$lnc
target_factor <- symbol_to_id(c("SOX2", 'POU5F1', 'MYC', 'KLF4'))
res <- corr_rank(data_list = b[1:2],
a_list = dri,
b_list = target_factor,
save_path = NULL,
method = 'pearson',
adj.method = 'BH')
View(res)
View(res[["TCGA-BLCA"]])
corr_rank <- function(data_list, a_list, b_list, save_path, method = 'pearson', adj.method = 'BH') {
res <- lapply(data_list, function(x) {
# pre-process
tmp_data <- x
tmp_data[, 1] <- unlist(lapply(tmp_data[, 1], function(x) {
strsplit(x, '\\.')[[1]][1]
}))
rownames(tmp_data) <- tmp_data[, 1]
tmp_data <- tmp_data[-1]
# # init result df
# df_result <- data.frame(
#   feature_a = character(),
#   feature_b = character(),
#   correlation = numeric(),
#   p_value = numeric(),
#   stringsAsFactors = FALSE
# )
#
# # for loop to calculation
# for (feature_a in a_list) {
#   for (feature_b in b_list) {
#     test <- stats::cor.test(tmp_data[[feature_a]],
#                             tmp_data[[feature_b]],
#                             method = method)
#     df_result <- rbind(df_result, data.frame(
#       feature_a = feature_a,
#       feature_b = feature_b,
#       correlation = test$estimate,
#       p_value = test$p.value,
#       stringsAsFactors = FALSE
#     ))
#   }
# }
#
# # pvalue adjustment
# df_result$p_value <- p.adjust(df_result$p_value, method = adj.method)
return(tmp_data)
})
}
gc()
dri <- read.csv('e:/project/WMDS_driver_lncRNA/data/pancancer_driver/pan_dri_5.csv')$lnc
target_factor <- symbol_to_id(c("SOX2", 'POU5F1', 'MYC', 'KLF4'))
res <- corr_rank(data_list = b[1:2],
a_list = dri,
b_list = target_factor,
save_path = NULL,
method = 'pearson',
adj.method = 'BH')
View(res)
View(res[["TCGA-BLCA"]])
use_package('stats')
?p.adjust
dri <- read.csv('e:/project/WMDS_driver_lncRNA/data/pancancer_driver/pan_dri_5.csv')$lnc
target_factor <- symbol_to_id(c("SOX2", 'POU5F1', 'MYC', 'KLF4'))
res <- corr_rank(data_list = b[1:2],
a_list = dri,
b_list = target_factor,
save_path = NULL,
method = 'pearson',
adj.method = 'BH')
View(res)
corr_rank <- function(data_list, a_list, b_list, save_path, method = 'pearson', adj.method = 'BH') {
res <- lapply(data_list, function(x) {
# pre-process
tmp_data <- x
tmp_data[, 1] <- unlist(lapply(tmp_data[, 1], function(x) {
strsplit(x, '\\.')[[1]][1]
}))
rownames(tmp_data) <- tmp_data[, 1]
tmp_data <- tmp_data[-1]
# init result df
df_result <- data.frame(
feature_a = character(),
feature_b = character(),
correlation = numeric(),
p_value = numeric(),
stringsAsFactors = FALSE
)
# for loop to calculation
for (feature_a in a_list) {
for (feature_b in b_list) {
test <- stats::cor.test(tmp_data[[feature_a]],
tmp_data[[feature_b]],
method = method)
df_result <- rbind(df_result, data.frame(
feature_a = feature_a,
feature_b = feature_b,
correlation = test$estimate,
p_value = test$p.value,
stringsAsFactors = FALSE
))
}
# pvalue adjustment
df_result$p_value <- stats::p.adjust(df_result$p_value, method = adj.method)
return(df_result)
})
}
dri <- read.csv('e:/project/WMDS_driver_lncRNA/data/pancancer_driver/pan_dri_5.csv')$lnc
target_factor <- symbol_to_id(c("SOX2", 'POU5F1', 'MYC', 'KLF4'))
res <- corr_rank(data_list = b[1:2],
a_list = dri,
b_list = target_factor,
save_path = NULL,
method = 'pearson',
adj.method = 'BH')
dri <- read.csv('e:/project/WMDS_driver_lncRNA/data/pancancer_driver/pan_dri_5.csv')$lnc
target_factor <- symbol_to_id(c("SOX2", 'POU5F1', 'MYC', 'KLF4'))
res <- corr_rank(data_list = b[1:2],
a_list = dri,
b_list = target_factor,
save_path = NULL,
method = 'pearson',
adj.method = 'BH')
corr_rank <- function(data_list, a_list, b_list, save_path, method = 'pearson', adj.method = 'BH') {
res <- lapply(data_list, function(x) {
# pre-process
tmp_data <- x
tmp_data[, 1] <- unlist(lapply(tmp_data[, 1], function(x) {
strsplit(x, '\\.')[[1]][1]
}))
rownames(tmp_data) <- tmp_data[, 1]
tmp_data <- tmp_data[-1]
# init result df
df_result <- data.frame(
feature_a = character(),
feature_b = character(),
correlation = numeric(),
p_value = numeric(),
stringsAsFactors = FALSE
)
# for loop to calculation
for (feature_a in a_list) {
for (feature_b in b_list) {
test <- stats::cor.test(as.numeric(tmp_data[[feature_a]]),
as.numeric(tmp_data[[feature_b]]),
method = method)
df_result <- rbind(df_result, data.frame(
feature_a = feature_a,
feature_b = feature_b,
correlation = test$estimate,
p_value = test$p.value,
stringsAsFactors = FALSE
))
}
# pvalue adjustment
df_result$p_value <- stats::p.adjust(df_result$p_value, method = adj.method)
return(df_result)
})
}
dri <- read.csv('e:/project/WMDS_driver_lncRNA/data/pancancer_driver/pan_dri_5.csv')$lnc
target_factor <- symbol_to_id(c("SOX2", 'POU5F1', 'MYC', 'KLF4'))
res <- corr_rank(data_list = b[1:2],
a_list = dri,
b_list = target_factor,
save_path = NULL,
method = 'pearson',
adj.method = 'BH')
corr_rank <- function(data_list, a_list, b_list, save_path, method = 'pearson', adj.method = 'BH') {
res <- lapply(data_list, function(x) {
# pre-process
tmp_data <- x
tmp_data[, 1] <- unlist(lapply(tmp_data[, 1], function(x) {
strsplit(x, '\\.')[[1]][1]
}))
rownames(tmp_data) <- tmp_data[, 1]
tmp_data <- tmp_data[-1]
# init result df
df_result <- data.frame(
feature_a = character(),
feature_b = character(),
correlation = numeric(),
p_value = numeric(),
stringsAsFactors = FALSE
)
# for loop to calculation
for (feature_a in a_list) {
for (feature_b in b_list) {
test <- stats::cor.test(as.numeric(tmp_data[feature_a, ]),
as.numeric(tmp_data[feature_b, ]),
method = method)
df_result <- rbind(df_result, data.frame(
feature_a = feature_a,
feature_b = feature_b,
correlation = test$estimate,
p_value = test$p.value,
stringsAsFactors = FALSE
))
}
# pvalue adjustment
df_result$p_value <- stats::p.adjust(df_result$p_value, method = adj.method)
return(df_result)
})
}
dri <- read.csv('e:/project/WMDS_driver_lncRNA/data/pancancer_driver/pan_dri_5.csv')$lnc
target_factor <- symbol_to_id(c("SOX2", 'POU5F1', 'MYC', 'KLF4'))
res <- corr_rank(data_list = b[1:2],
a_list = dri,
b_list = target_factor,
save_path = NULL,
method = 'pearson',
adj.method = 'BH')
View(res)
View(res[["TCGA-BLCA"]])
?abs
corr_rank <- function(data_list, a_list, b_list, save_path, method = 'pearson', adj.method = 'BH') {
res <- lapply(data_list, function(x) {
# pre-process
tmp_data <- x
tmp_data[, 1] <- unlist(lapply(tmp_data[, 1], function(x) {
strsplit(x, '\\.')[[1]][1]
}))
rownames(tmp_data) <- tmp_data[, 1]
tmp_data <- tmp_data[-1]
# init result df
df_result <- data.frame(
feature_a = character(),
feature_b = character(),
correlation = numeric(),
p_value = numeric(),
stringsAsFactors = FALSE
)
# for loop to calculation
for (feature_a in a_list) {
for (feature_b in b_list) {
test <- stats::cor.test(as.numeric(tmp_data[feature_a, ]),
as.numeric(tmp_data[feature_b, ]),
method = method)
df_result <- rbind(df_result, data.frame(
feature_a = feature_a,
feature_b = feature_b,
correlation = test$estimate,
p_value = test$p.value,
stringsAsFactors = FALSE
))
}
# pvalue adjustment
df_result$p_value <- stats::p.adjust(df_result$p_value, method = adj.method)
# get abs corr.coef
df_result$abs_corr <- abs(df_result$correlation)
return(df_result)
})
}
dri <- read.csv('e:/project/WMDS_driver_lncRNA/data/pancancer_driver/pan_dri_5.csv')$lnc
target_factor <- symbol_to_id(c("SOX2", 'POU5F1', 'MYC', 'KLF4'))
res <- corr_rank(data_list = b[1:2],
a_list = dri,
b_list = target_factor,
save_path = NULL,
method = 'pearson',
adj.method = 'BH')
View(res)
View(res[["TCGA-BLCA"]])
corr_rank <- function(data_list, a_list, b_list, method = 'pearson', adj.method = 'BH') {
res <- lapply(data_list, function(x) {
# pre-process
tmp_data <- x
tmp_data[, 1] <- unlist(lapply(tmp_data[, 1], function(x) {
strsplit(x, '\\.')[[1]][1]
}))
rownames(tmp_data) <- tmp_data[, 1]
tmp_data <- tmp_data[-1]
# init result df
df_result <- data.frame(
feature_a = character(),
feature_b = character(),
correlation = numeric(),
p_value = numeric(),
stringsAsFactors = FALSE
)
# for loop to calculation
for (feature_a in a_list) {
for (feature_b in b_list) {
test <- stats::cor.test(as.numeric(tmp_data[feature_a, ]),
as.numeric(tmp_data[feature_b, ]),
method = method)
df_result <- rbind(df_result, data.frame(
feature_a = feature_a,
feature_b = feature_b,
correlation = test$estimate,
p_value = test$p.value,
stringsAsFactors = FALSE
))
}
# pvalue adjustment
df_result$p_value <- stats::p.adjust(df_result$p_value, method = adj.method)
# get abs corr.coef
df_result$abs_corr <- abs(df_result$correlation)
return(df_result)
})
return(res)
}
dri <- read.csv('e:/project/WMDS_driver_lncRNA/data/pancancer_driver/pan_dri_5.csv')$lnc
target_factor <- symbol_to_id(c("SOX2", 'POU5F1', 'MYC', 'KLF4'))
res <- corr_rank(data_list = b,
a_list = dri,
b_list = target_factor,
save_path = NULL,
method = 'pearson',
adj.method = 'BH')
dri <- read.csv('e:/project/WMDS_driver_lncRNA/data/pancancer_driver/pan_dri_5.csv')$lnc
target_factor <- symbol_to_id(c("SOX2", 'POU5F1', 'MYC', 'KLF4'))
res <- corr_rank(data_list = b,
a_list = dri,
b_list = target_factor,
method = 'pearson',
adj.method = 'BH')
View(res)
document()
use_test()
style_pkg()
lintr::lint_package()
check()
rm(list = ls());gc()
gc()
