deg <- read.csv('e:/project/DriverLnc2iPSC/Result/DEG/pandri_5/DESeq2_res_ref_normal.csv')
res <- deg_corr_selection(corr_list = corr.coef,
deg_df = deg)
View(res)
res[["TCGA-BLCA"]][["ENSG00000136826"]]
RobustRankAggreg::aggregateRanks(res[["TCGA-BLCA"]][["ENSG00000136826"]])
rm(list = ls())
deg_corr_selection <- function(corr_list, deg_df, top = 15,
corr_padj_threshold = 0.05,
deg_padj_threshold = 0.01,
test_factor_col = 'feature_a',
target_factor_col = 'feature_b',
RRA_intergration = TRUE) {
top_by_group_list <- lapply(names(corr_list), function(cancer) {
tmp_corr <- corr_list[[cancer]]
tmp_deg <- subset(deg_df, deg_df$cancer_type == cancer)
tmp_group_list <- split(tmp_corr, tmp_corr[[target_factor_col]])
top_by_group <- lapply(tmp_group_list, function(df) {
df <- df[df$p_value < corr_padj_threshold, ]
df <- df[order(df$abs_corr, decreasing = TRUE), ]
df_selected <- df[1:min(top, nrow(df)), ]
tmp_deg_selected <- tmp_deg[match(df_selected[[test_factor_col]], tmp_deg$Ensembl_ID), ]
df_selected$log2FoldChange <- tmp_deg_selected$log2FoldChange
df_selected$padj <- tmp_deg_selected$padj
df_selected$cancer_type <- tmp_deg_selected$cancer_type
df_selected <- subset(df_selected, df_selected$padj < deg_padj_threshold)
df_selected$abs_corr_rank <- rank(-df_selected$abs_corr, ties.method = "min")
df_selected$abs_log2FoldChange_rank <- rank(-abs(df_selected$log2FoldChange), ties.method = "min")
glist <- list(abs_corr_rank = df_selected[[test_factor_col]][unlist(df_selected$abs_corr_rank)],
abs_log2FoldChange_rank = df_selected[[test_factor_col]][unlist(df_selected$abs_log2FoldChange_rank)])
# return(glist)
ag <- RobustRankAggreg::aggregateRanks(glist)
# ag <- ag[match(df_selected[[test_factor_col]], ag$Name), ]
# df_selected$RRA_score <- ag$Score
# df_selected$Rank <- rank(df_selected$RRA_score, ties.method = "min")
return(df_selected)
})
names(top_by_group_list) <- names(corr_list)
return(top_by_group_list)
}
load('e:/project/DriverLnc2iPSC/Result/corr.coef.rdata')
deg <- read.csv('e:/project/DriverLnc2iPSC/Result/DEG/pandri_5/DESeq2_res_ref_normal.csv')
res <- deg_corr_selection(corr_list = corr.coef,
deg_df = deg)
rm(list = ls())
deg_corr_selection <- function(corr_list, deg_df, top = 15,
corr_padj_threshold = 0.05,
deg_padj_threshold = 0.01,
test_factor_col = 'feature_a',
target_factor_col = 'feature_b',
RRA_intergration = TRUE) {
top_by_group_list <- lapply(names(corr_list), function(cancer) {
tmp_corr <- corr_list[[cancer]]
tmp_deg <- subset(deg_df, deg_df$cancer_type == cancer)
tmp_group_list <- split(tmp_corr, tmp_corr[[target_factor_col]])
top_by_group <- lapply(tmp_group_list, function(df) {
df <- df[df$p_value < corr_padj_threshold, ]
df <- df[order(df$abs_corr, decreasing = TRUE), ]
df_selected <- df[1:min(top, nrow(df)), ]
tmp_deg_selected <- tmp_deg[match(df_selected[[test_factor_col]], tmp_deg$Ensembl_ID), ]
df_selected$log2FoldChange <- tmp_deg_selected$log2FoldChange
df_selected$padj <- tmp_deg_selected$padj
df_selected$cancer_type <- tmp_deg_selected$cancer_type
df_selected <- subset(df_selected, df_selected$padj < deg_padj_threshold)
df_selected$abs_corr_rank <- rank(-df_selected$abs_corr, ties.method = "min")
df_selected$abs_log2FoldChange_rank <- rank(-abs(df_selected$log2FoldChange), ties.method = "min")
glist <- list(abs_corr_rank = df_selected[[test_factor_col]][unlist(df_selected$abs_corr_rank)],
abs_log2FoldChange_rank = df_selected[[test_factor_col]][unlist(df_selected$abs_log2FoldChange_rank)])
print(glist)
# ag <- RobustRankAggreg::aggregateRanks(glist)
# ag <- ag[match(df_selected[[test_factor_col]], ag$Name), ]
# df_selected$RRA_score <- ag$Score
# df_selected$Rank <- rank(df_selected$RRA_score, ties.method = "min")
# return(df_selected)
})
names(top_by_group_list) <- names(corr_list)
return(top_by_group_list)
}
load('e:/project/DriverLnc2iPSC/Result/corr.coef.rdata')
deg <- read.csv('e:/project/DriverLnc2iPSC/Result/DEG/pandri_5/DESeq2_res_ref_normal.csv')
res <- deg_corr_selection(corr_list = corr.coef,
deg_df = deg)
rm(list = ls())
deg_corr_selection <- function(corr_list, deg_df, top = 15,
corr_padj_threshold = 0.05,
deg_padj_threshold = 0.01,
test_factor_col = 'feature_a',
target_factor_col = 'feature_b',
RRA_intergration = TRUE) {
top_by_group_list <- lapply(names(corr_list), function(cancer) {
tmp_corr <- corr_list[[cancer]]
tmp_deg <- subset(deg_df, deg_df$cancer_type == cancer)
tmp_group_list <- split(tmp_corr, tmp_corr[[target_factor_col]])
top_by_group <- lapply(tmp_group_list, function(df) {
df <- df[df$p_value < corr_padj_threshold, ]
df <- df[order(df$abs_corr, decreasing = TRUE), ]
df_selected <- df[1:min(top, nrow(df)), ]
tmp_deg_selected <- tmp_deg[match(df_selected[[test_factor_col]], tmp_deg$Ensembl_ID), ]
df_selected$log2FoldChange <- tmp_deg_selected$log2FoldChange
df_selected$padj <- tmp_deg_selected$padj
df_selected$cancer_type <- tmp_deg_selected$cancer_type
df_selected <- subset(df_selected, df_selected$padj < deg_padj_threshold)
df_selected$abs_corr_rank <- rank(-df_selected$abs_corr, ties.method = "min")
df_selected$abs_log2FoldChange_rank <- rank(-abs(df_selected$log2FoldChange), ties.method = "min")
if (RRA_intergration) {
glist <- list(abs_corr_rank = df_selected[[test_factor_col]][unlist(df_selected$abs_corr_rank)],
abs_log2FoldChange_rank = df_selected[[test_factor_col]][unlist(df_selected$abs_log2FoldChange_rank)])
if (length(glist[0]) == 0 | length(glist[1]) == 0) {
return(df_selected)
} else {
ag <- RobustRankAggreg::aggregateRanks(glist)
ag <- ag[match(df_selected[[test_factor_col]], ag$Name), ]
df_selected$RRA_score <- ag$Score
df_selected$Rank <- rank(df_selected$RRA_score, ties.method = "min")
return(df_selected)
}
} else {
return(df_selected)
}
})
names(top_by_group_list) <- names(corr_list)
return(top_by_group_list)
}
load('e:/project/DriverLnc2iPSC/Result/corr.coef.rdata')
deg <- read.csv('e:/project/DriverLnc2iPSC/Result/DEG/pandri_5/DESeq2_res_ref_normal.csv')
res <- deg_corr_selection(corr_list = corr.coef,
deg_df = deg)
View(res)
View(res[["TCGA-KICH"]][["ENSG00000204531"]])
View(res[["TCGA-KIRP"]][["ENSG00000204531"]])
rm(list = ls())
deg_corr_selection <- function(corr_list, deg_df, top = 15,
corr_padj_threshold = 0.05,
deg_padj_threshold = 0.01,
test_factor_col = 'feature_a',
target_factor_col = 'feature_b',
RRA_intergration = TRUE) {
top_by_group_list <- lapply(names(corr_list), function(cancer) {
tmp_corr <- corr_list[[cancer]]
tmp_deg <- subset(deg_df, deg_df$cancer_type == cancer)
tmp_group_list <- split(tmp_corr, tmp_corr[[target_factor_col]])
top_by_group <- lapply(tmp_group_list, function(df) {
df <- df[df$p_value < corr_padj_threshold, ]
df <- df[order(df$abs_corr, decreasing = TRUE), ]
df_selected <- df[1:min(top, nrow(df)), ]
tmp_deg_selected <- tmp_deg[match(df_selected[[test_factor_col]], tmp_deg$Ensembl_ID), ]
df_selected$log2FoldChange <- tmp_deg_selected$log2FoldChange
df_selected$padj <- tmp_deg_selected$padj
df_selected$cancer_type <- tmp_deg_selected$cancer_type
df_selected <- subset(df_selected, df_selected$padj < deg_padj_threshold)
df_selected$abs_corr_rank <- rank(-df_selected$abs_corr, ties.method = "min")
df_selected$abs_log2FoldChange_rank <- rank(-abs(df_selected$log2FoldChange), ties.method = "min")
if (RRA_intergration) {
glist <- list(abs_corr_rank = df_selected[[test_factor_col]][unlist(df_selected$abs_corr_rank)],
abs_log2FoldChange_rank = df_selected[[test_factor_col]][unlist(df_selected$abs_log2FoldChange_rank)])
if (length(glist[0]) == 0 | length(glist[1]) == 0) {
return(df_selected)
} else {
ag <- RobustRankAggreg::aggregateRanks(glist)
ag <- ag[match(df_selected[[test_factor_col]], ag$Name), ]
df_selected$RRA_score <- ag$Score
df_selected$Rank <- rank(df_selected$RRA_score, ties.method = "min")
return(ag)
}
} else {
return(df_selected)
}
})
names(top_by_group_list) <- names(corr_list)
return(top_by_group_list)
}
load('e:/project/DriverLnc2iPSC/Result/corr.coef.rdata')
deg <- read.csv('e:/project/DriverLnc2iPSC/Result/DEG/pandri_5/DESeq2_res_ref_normal.csv')
res <- deg_corr_selection(corr_list = corr.coef,
deg_df = deg,
RRA_intergration = TRUE)
View(res)
rm(list = ls())
deg_corr_selection <- function(corr_list, deg_df, top = 15,
corr_padj_threshold = 0.05,
deg_padj_threshold = 0.01,
test_factor_col = 'feature_a',
target_factor_col = 'feature_b',
RRA_intergration = TRUE) {
top_by_group_list <- lapply(names(corr_list), function(cancer) {
tmp_corr <- corr_list[[cancer]]
tmp_deg <- subset(deg_df, deg_df$cancer_type == cancer)
tmp_group_list <- split(tmp_corr, tmp_corr[[target_factor_col]])
top_by_group <- lapply(tmp_group_list, function(df) {
df <- df[df$p_value < corr_padj_threshold, ]
df <- df[order(df$abs_corr, decreasing = TRUE), ]
df_selected <- df[1:min(top, nrow(df)), ]
tmp_deg_selected <- tmp_deg[match(df_selected[[test_factor_col]], tmp_deg$Ensembl_ID), ]
df_selected$log2FoldChange <- tmp_deg_selected$log2FoldChange
df_selected$padj <- tmp_deg_selected$padj
df_selected$cancer_type <- tmp_deg_selected$cancer_type
df_selected <- subset(df_selected, df_selected$padj < deg_padj_threshold)
df_selected$abs_corr_rank <- rank(-df_selected$abs_corr, ties.method = "min")
df_selected$abs_log2FoldChange_rank <- rank(-abs(df_selected$log2FoldChange), ties.method = "min")
if (RRA_intergration) {
glist <- list(abs_corr_rank = df_selected[[test_factor_col]][unlist(df_selected$abs_corr_rank)],
abs_log2FoldChange_rank = df_selected[[test_factor_col]][unlist(df_selected$abs_log2FoldChange_rank)])
if (length(glist[1]) == 0 | length(glist[2]) == 0) {
return(df_selected)
} else {
ag <- RobustRankAggreg::aggregateRanks(glist)
ag <- ag[match(df_selected[[test_factor_col]], ag$Name), ]
df_selected$RRA_score <- ag$Score
df_selected$Rank <- rank(df_selected$RRA_score, ties.method = "min")
return(df_selected)
}
} else {
return(df_selected)
}
})
names(top_by_group_list) <- names(corr_list)
return(top_by_group_list)
}
load('e:/project/DriverLnc2iPSC/Result/corr.coef.rdata')
deg <- read.csv('e:/project/DriverLnc2iPSC/Result/DEG/pandri_5/DESeq2_res_ref_normal.csv')
res <- deg_corr_selection(corr_list = corr.coef,
deg_df = deg,
RRA_intergration = TRUE)
rm(list = ls())
deg_corr_selection <- function(corr_list, deg_df, top = 15,
corr_padj_threshold = 0.05,
deg_padj_threshold = 0.01,
test_factor_col = 'feature_a',
target_factor_col = 'feature_b',
RRA_intergration = TRUE) {
top_by_group_list <- lapply(names(corr_list), function(cancer) {
tmp_corr <- corr_list[[cancer]]
tmp_deg <- subset(deg_df, deg_df$cancer_type == cancer)
tmp_group_list <- split(tmp_corr, tmp_corr[[target_factor_col]])
top_by_group <- lapply(tmp_group_list, function(df) {
df <- df[df$p_value < corr_padj_threshold, ]
df <- df[order(df$abs_corr, decreasing = TRUE), ]
df_selected <- df[1:min(top, nrow(df)), ]
tmp_deg_selected <- tmp_deg[match(df_selected[[test_factor_col]], tmp_deg$Ensembl_ID), ]
df_selected$log2FoldChange <- tmp_deg_selected$log2FoldChange
df_selected$padj <- tmp_deg_selected$padj
df_selected$cancer_type <- tmp_deg_selected$cancer_type
df_selected <- subset(df_selected, df_selected$padj < deg_padj_threshold)
df_selected$abs_corr_rank <- rank(-df_selected$abs_corr, ties.method = "min")
df_selected$abs_log2FoldChange_rank <- rank(-abs(df_selected$log2FoldChange), ties.method = "min")
if (RRA_intergration) {
glist <- list(abs_corr_rank = df_selected[[test_factor_col]][unlist(df_selected$abs_corr_rank)],
abs_log2FoldChange_rank = df_selected[[test_factor_col]][unlist(df_selected$abs_log2FoldChange_rank)])
if (length(glist[[1]]) == 0 | length(glist[[2]]) == 0) {
return(df_selected)
} else {
ag <- RobustRankAggreg::aggregateRanks(glist)
ag <- ag[match(df_selected[[test_factor_col]], ag$Name), ]
df_selected$RRA_score <- ag$Score
df_selected$Rank <- rank(df_selected$RRA_score, ties.method = "min")
return(df_selected)
}
} else {
return(df_selected)
}
})
names(top_by_group_list) <- names(corr_list)
return(top_by_group_list)
}
load('e:/project/DriverLnc2iPSC/Result/corr.coef.rdata')
deg <- read.csv('e:/project/DriverLnc2iPSC/Result/DEG/pandri_5/DESeq2_res_ref_normal.csv')
res <- deg_corr_selection(corr_list = corr.coef,
deg_df = deg,
RRA_intergration = TRUE)
View(res)
View(res[["TCGA-KIRP"]][["ENSG00000204531"]])
rm(list = ls())
deg_corr_selection <- function(corr_list, deg_df, top = 15,
corr_padj_threshold = 0.05,
deg_padj_threshold = 0.01,
test_factor_col = 'feature_a',
target_factor_col = 'feature_b',
RRA_intergration = TRUE) {
top_by_group_list <- lapply(names(corr_list), function(cancer) {
tmp_corr <- corr_list[[cancer]]
tmp_deg <- subset(deg_df, deg_df$cancer_type == cancer)
tmp_group_list <- split(tmp_corr, tmp_corr[[target_factor_col]])
top_by_group <- lapply(tmp_group_list, function(df) {
df <- df[df$p_value < corr_padj_threshold, ]
df <- df[order(df$abs_corr, decreasing = TRUE), ]
df_selected <- df[1:min(top, nrow(df)), ]
tmp_deg_selected <- tmp_deg[match(df_selected[[test_factor_col]], tmp_deg$Ensembl_ID), ]
df_selected$log2FoldChange <- tmp_deg_selected$log2FoldChange
df_selected$padj <- tmp_deg_selected$padj
df_selected$cancer_type <- tmp_deg_selected$cancer_type
df_selected <- subset(df_selected, df_selected$padj < deg_padj_threshold)
df_selected$abs_corr_rank <- rank(-df_selected$abs_corr, ties.method = "min")
df_selected$abs_log2FoldChange_rank <- rank(-abs(df_selected$log2FoldChange), ties.method = "min")
if (RRA_intergration) {
glist <- list(abs_corr_rank = df_selected[[test_factor_col]][unlist(df_selected$abs_corr_rank)],
abs_log2FoldChange_rank = df_selected[[test_factor_col]][unlist(df_selected$abs_log2FoldChange_rank)])
if (length(glist[[1]]) == 0 | length(glist[[2]]) == 0) {
return(df_selected)
} else {
ag <- RobustRankAggreg::aggregateRanks(glist)
ag <- ag[match(df_selected[[test_factor_col]], ag$Name), ]
df_selected$RRA_score <- ag$Score
df_selected$Rank <- rank(df_selected$RRA_score, ties.method = "min")
return(df_selected)
}
} else {
return(df_selected)
}
})
names(top_by_group_list) <- names(corr_list)
return(top_by_group_list)
}
load('e:/project/DriverLnc2iPSC/Result/corr.coef.rdata')
deg <- read.csv('e:/project/DriverLnc2iPSC/Result/DEG/pandri_5/DESeq2_res_ref_normal.csv')
res <- deg_corr_selection(corr_list = corr.coef,
deg_df = deg,
RRA_intergration = TRUE)
View(res)
View(res[["TCGA-KIRP"]][["ENSG00000204531"]])
rm(list = ls())
deg_corr_selection <- function(corr_list, deg_df, top = 15,
corr_padj_threshold = 0.05,
deg_padj_threshold = 0.01,
test_factor_col = 'feature_a',
target_factor_col = 'feature_b',
RRA_intergration = TRUE) {
top_by_group_list <- lapply(names(corr_list), function(cancer) {
tmp_corr <- corr_list[[cancer]]
tmp_deg <- subset(deg_df, deg_df$cancer_type == cancer)
tmp_group_list <- split(tmp_corr, tmp_corr[[target_factor_col]])
top_by_group <- lapply(tmp_group_list, function(df) {
df <- df[df$p_value < corr_padj_threshold, ]
df <- df[order(df$abs_corr, decreasing = TRUE), ]
df_selected <- df[1:min(top, nrow(df)), ]
tmp_deg_selected <- tmp_deg[match(df_selected[[test_factor_col]], tmp_deg$Ensembl_ID), ]
df_selected$log2FoldChange <- tmp_deg_selected$log2FoldChange
df_selected$padj <- tmp_deg_selected$padj
df_selected$cancer_type <- tmp_deg_selected$cancer_type
df_selected <- subset(df_selected, df_selected$padj < deg_padj_threshold)
df_selected$abs_corr_rank <- rank(-df_selected$abs_corr, ties.method = "min")
df_selected$abs_log2FoldChange_rank <- rank(-abs(df_selected$log2FoldChange), ties.method = "min")
if (RRA_intergration) {
glist <- list(abs_corr_rank = df_selected[[test_factor_col]][unlist(df_selected$abs_corr_rank)],
abs_log2FoldChange_rank = df_selected[[test_factor_col]][unlist(df_selected$abs_log2FoldChange_rank)])
if (length(glist[[1]]) == 0 | length(glist[[2]]) == 0) {
return(df_selected)
} else {
ag <- RobustRankAggreg::aggregateRanks(glist)
ag <- ag[match(df_selected[[test_factor_col]], ag$Name), ]
df_selected$RRA_score <- ag$Score
df_selected$Rank <- rank(df_selected$RRA_score, ties.method = "min")
df_selected <- df_selected[order(df_selected$Rank, decreasing = FALSE), ]
return(df_selected)
}
} else {
return(df_selected)
}
})
names(top_by_group_list) <- names(corr_list)
return(top_by_group_list)
}
load('e:/project/DriverLnc2iPSC/Result/corr.coef.rdata')
deg <- read.csv('e:/project/DriverLnc2iPSC/Result/DEG/pandri_5/DESeq2_res_ref_normal.csv')
res <- deg_corr_selection(corr_list = corr.coef,
deg_df = deg,
RRA_intergration = TRUE)
View(res)
View(res[["TCGA-KIRP"]][["ENSG00000204531"]])
2 * 1.4958604
View(deg)
rm(list = ls())
deg_corr_selection <- function(corr_list, deg_df, top = 15,
corr_padj_threshold = 0.05,
deg_padj_threshold = 0.01,
test_factor_col = 'feature_a',
target_factor_col = 'feature_b',
RRA_intergration = TRUE) {
top_by_group_list <- lapply(names(corr_list), function(cancer) {
tmp_corr <- corr_list[[cancer]]
tmp_deg <- subset(deg_df, deg_df$cancer_type == cancer)
tmp_group_list <- split(tmp_corr, tmp_corr[[target_factor_col]])
top_by_group <- lapply(tmp_group_list, function(df) {
df <- df[df$p_value < corr_padj_threshold, ]
df <- df[order(df$abs_corr, decreasing = TRUE), ]
df_selected <- df[1:min(top, nrow(df)), ]
tmp_deg_selected <- tmp_deg[match(df_selected[[test_factor_col]], tmp_deg$Ensembl_ID), ]
df_selected$log2FoldChange <- tmp_deg_selected$log2FoldChange
df_selected$padj <- tmp_deg_selected$padj
df_selected$cancer_type <- tmp_deg_selected$cancer_type
df_selected <- subset(df_selected, df_selected$padj < deg_padj_threshold)
df_selected$abs_corr_rank <- rank(-df_selected$abs_corr, ties.method = "min")
df_selected$abs_log2FoldChange_rank <- rank(-abs(df_selected$log2FoldChange), ties.method = "min")
if (RRA_intergration) {
glist <- list(abs_corr_rank = df_selected[[test_factor_col]][unlist(df_selected$abs_corr_rank)],
abs_log2FoldChange_rank = df_selected[[test_factor_col]][unlist(df_selected$abs_log2FoldChange_rank)])
if (length(glist[[1]]) == 0 | length(glist[[2]]) == 0) {
return(df_selected)
} else {
ag <- RobustRankAggreg::aggregateRanks(glist)
ag <- ag[match(df_selected[[test_factor_col]], ag$Name), ]
df_selected$RRA_score <- ag$Score
df_selected$Rank <- rank(df_selected$RRA_score, ties.method = "min")
df_selected <- df_selected[order(df_selected$Rank, decreasing = FALSE), ]
return(df_selected)
}
} else {
return(df_selected)
}
})
names(top_by_group_list) <- names(corr_list)
return(top_by_group_list)
}
load('e:/project/DriverLnc2iPSC/Result/corr.coef.rdata')
deg <- read.csv('e:/project/DriverLnc2iPSC/Result/DEG/pandri_5/DESeq2_res_ref_normal.csv')
res <- deg_corr_selection(corr_list = corr.coef,
deg_df = deg,
RRA_intergration = TRUE)
gc()
View(res)
View(res[["TCGA-KIRP"]][["ENSG00000136826"]])
View(res[["TCGA-KIRP"]][["ENSG00000204531"]])
gc()
library(devtools)
document()
use_test()
styler::style_pkg()
lintr::lint_package()
seq_len(min(15, 10))
styler::style_pkg()
lintr::lint_package()
check()
rm(list = ls())
gc()
# install.packages("devtools")
devtools::install_github("Luolattee26/ComprehensivePipelineUtils")
rm(list = ls())
d2i_summary <- function(selection_res_list, top = 1) {
}
setwd('e:/project/DriverLnc2iPSC/')
# read DEG result
deg <- read.csv('./Result/DEG/pandri_5/DESeq2_res_ref_normal.csv')
#' To select DEGs related to iPSC-factors in d2i analysis pipeline.
#'
#' @param corr_list corr.coef list get from corr_rank function
#' @param deg_df deg info get from deseq2 (all cancer types)
#' @param top top n genes to chose
#' @param corr_padj_threshold adjustment p-value threshold for corr.coef
#' @param deg_padj_threshold adjustment p-value threshold for deg test
#' @param test_factor_col column name of test factor (drivers) in corr.coef
#' @param target_factor_col column name of iPSC-factor in corr.coef
#' @param rra_intergration whether use RRA algorithm to integrate LFC&corr ranks
#'
#' @return result list of each cancer types.
#' @export
#'
#' @examples
#' NULL
deg_corr_selection <- function(corr_list, deg_df, top = 15,
corr_padj_threshold = 0.05,
deg_padj_threshold = 0.01,
test_factor_col = "feature_a",
target_factor_col = "feature_b",
rra_intergration = TRUE) {
top_by_group_list <- lapply(names(corr_list), function(cancer) {
tmp_corr <- corr_list[[cancer]]
tmp_deg <- subset(deg_df, deg_df$cancer_type == cancer)
tmp_group_list <- split(tmp_corr, tmp_corr[[target_factor_col]])
top_by_group <- lapply(tmp_group_list, function(df) {
df <- df[df$p_value < corr_padj_threshold, ]
df <- df[order(df$abs_corr, decreasing = TRUE), ]
df_selected <- df[seq_len(min(top, nrow(df))), ]
tmp_deg_selected <- tmp_deg[match(
df_selected[[test_factor_col]],
tmp_deg$Ensembl_ID
), ]
df_selected$log2FoldChange <- tmp_deg_selected$log2FoldChange
df_selected$padj <- tmp_deg_selected$padj
df_selected$cancer_type <- tmp_deg_selected$cancer_type
df_selected <- subset(df_selected, df_selected$padj < deg_padj_threshold)
df_selected$abs_corr_rank <- rank(-df_selected$abs_corr,
ties.method = "min"
)
df_selected$abs_log2FoldChange_rank <-
rank(-abs(df_selected$log2FoldChange), ties.method = "min")
if (rra_intergration) {
df <- df_selected
glist <- list(
abs_corr_rank =
df[[test_factor_col]][unlist(df$abs_corr_rank)],
abs_log2FoldChange_rank =
df[[test_factor_col]][unlist(df$abs_log2FoldChange_rank)]
)
if (length(glist[[1]]) == 0 | length(glist[[2]]) == 0) {
return(df_selected)
} else {
ag <- RobustRankAggreg::aggregateRanks(glist)
ag <- ag[match(df_selected[[test_factor_col]], ag$Name), ]
df_selected$RRA_score <- ag$Score
df_selected$Rank <- rank(df_selected$RRA_score, ties.method = "min")
df_selected <-
df_selected[order(df_selected$Rank, decreasing = FALSE), ]
return(df_selected)
}
} else {
return(df_selected)
}
})
return(top_by_group)
})
names(top_by_group_list) <- names(corr_list)
return(top_by_group_list)
}
